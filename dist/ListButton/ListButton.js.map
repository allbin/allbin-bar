{"version":3,"sources":["../src/ListButton/ListButton.tsx"],"names":[],"mappings":"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","file":"ListButton/ListButton.js","sourcesContent":["import React from 'react';\nimport {\n    createStyles,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    Theme,\n} from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ShareIcon from '@material-ui/icons/Share';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ExportIcon from '@material-ui/icons/Print';\nimport InfoIcon from '@material-ui/icons/Info';\nimport PresentationIcon from '@material-ui/icons/Fullscreen';\nimport text from '../text';\nimport { ButtonID } from '..';\n\n// import {\n//     SaveModalContent,\n//     ShareModalContent,\n//     ExportModalContent,\n// } from './ModalContent';\n\ndeclare global {\n    interface Window {\n        sso: any;\n    }\n}\n\ntype ColorKey = 'blue' | 'red';\n\ninterface ListButtonProps {\n    id: ButtonID;\n    onClick: (id: ButtonID) => void;\n    onMouseEnter?: (id: ButtonID) => void;\n    onMouseLeave?: (id: ButtonID) => void;\n    color?: ColorKey;\n}\ninterface StyleProps {\n    color?: ColorKey;\n}\n\ntype ListButtonComponent = React.FunctionComponent<ListButtonProps>;\n\nconst border_radius = 4;\n\nconst colors: {\n    /** Returns [color, color] where the first is background and the second is text. */\n    [key in ColorKey]: [string, string]\n} = {\n    blue: ['#3f51b5', '#fff'],\n    red: ['#992132', '#fff'],\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {},\n        listItem: {\n            borderRadius: border_radius,\n            padding: theme.spacing(1, 2),\n            marginTop: (props: StyleProps) => props.color ? theme.spacing(1) : 0,\n            backgroundColor: (props: StyleProps) => props.color ? colors[props.color][0] : undefined,\n            '&:HOVER': {\n                backgroundColor: 'rgb(180,180,180)',\n                '& span': {\n                    color: '#fff',\n                },\n                '& p': {\n                    color: '#fff !important',\n                },\n            },\n            '& span': {\n                color: (props: StyleProps) => props.color ? colors[props.color][1] : 'rgb(65, 61, 73)',\n                fontSize: 14,\n            },\n        }\n    }),\n);\n\nfunction getIcon(name: ButtonID) {\n    switch (name) {\n        case 'help':\n            return <SaveIcon />;\n        case 'contact':\n            return <ShareIcon />;\n        case 'changelog':\n            return <ExportIcon />;\n        case 'to_dashboard':\n            return <PresentationIcon />;\n        case 'about':\n            return <InfoIcon />;\n        default:\n            return <InboxIcon />;\n    }\n}\n\nconst ListButton: ListButtonComponent = ({\n    id,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    color\n}) => {\n    const classes = useStyles({ color });\n\n    return (\n\n        <ListItem\n            className={classes.listItem}\n            button\n            dense\n            onClick={() => onClick(id)}\n            onMouseEnter={() => onMouseEnter ? onMouseEnter(id) : undefined}\n            onMouseLeave={() => onMouseLeave ? onMouseLeave(id) : undefined}\n        >\n            <ListItemIcon>{getIcon(id)}</ListItemIcon>\n            <ListItemText\n                primary={text(id)}\n            />\n        </ListItem>\n    );\n};\n\nexport default ListButton;\n"],"sourceRoot":"/source/"}