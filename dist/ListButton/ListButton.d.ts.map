{"version":3,"sources":["../src/ListButton/ListButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAW1B,OAAO,EAAE,QAAQ,EAAE,MAAM,IAAI,CAAC;AAE9B,OAAO,CAAC,MAAM,CAAC;IACX,UAAU,MAAM;QACZ,GAAG,EAAE,GAAG,CAAC;KACZ;CACJ;AAED,UAAU,eAAe;IACrB,EAAE,EAAE,QAAQ,CAAC;IACb,MAAM,CAAC,EAAE,OAAO,CAAC;IACjB,OAAO,EAAE,CAAC,EAAE,EAAE,QAAQ,KAAK,IAAI,CAAC;IAChC,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,KAAK,IAAI,CAAC;IACtC,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,KAAK,IAAI,CAAC;CACzC;AACD,aAAK,mBAAmB,GAAG,KAAK,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;AA4EpE,QAAA,MAAM,UAAU,EAAE,mBAuBjB,CAAC;AAEF,eAAe,UAAU,CAAC","file":"ListButton.d.ts","sourcesContent":["import React from 'react';\nimport {\n    createStyles,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    Theme,\n} from '@material-ui/core';\nimport { Info, Inbox, Help, Call, ChromeReaderMode } from '@material-ui/icons';\nimport text from '../text';\nimport { ButtonID } from '..';\n\ndeclare global {\n    interface Window {\n        sso: any;\n    }\n}\n\ninterface ListButtonProps {\n    id: ButtonID;\n    active?: boolean;\n    onClick: (id: ButtonID) => void;\n    onMouseEnter?: (id: ButtonID) => void;\n    onMouseLeave?: (id: ButtonID) => void;\n}\ntype ListButtonComponent = React.FunctionComponent<ListButtonProps>;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {},\n        listItem: {\n            display: 'inline-flex',\n            width: 'fit-content',\n            borderRadius: 0,\n            padding: theme.spacing(1, 2),\n            flexDirection: 'row-reverse',\n            marginBottom: theme.spacing(2),\n            opacity: 0.6,\n            backgroundColor: 'transparent',\n            [theme.breakpoints.down('lg')]: {\n                padding: theme.spacing(1, 1),\n            },\n            '& .border': {\n                height: 4,\n                backgroundColor: '#fff',\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                width: 0,\n                opacity: 0.5,\n                transition: 'all 0.3s',\n                pointerEvents: 'none',\n                [theme.breakpoints.down('lg')]: {\n                    height: 2,\n                },\n            },\n            '&.active': {\n                opacity: 1,\n                '& .border': { width: '100%', opacity: 1 },\n            },\n            '&:HOVER': {\n                backgroundColor: 'transparent',\n                opacity: 1,\n                '& .border': { width: '100px' },\n            },\n            '& span': {\n                color: '#fff',\n                marginRight: theme.spacing(4),\n                fontSize: 30,\n                fontWeight: 'bold',\n                [theme.breakpoints.down('lg')]: {\n                    fontSize: 24,\n                },\n            },\n        },\n        icon: {\n            color: '#fff',\n            '& svg': {\n                width: 28,\n                height: 28,\n                opacity: 0.5,\n            },\n        },\n    }),\n);\n\nfunction getIcon(name: ButtonID) {\n    switch (name) {\n        case 'help':\n            return <Help />;\n        case 'contact':\n            return <Call />;\n        case 'changelog':\n            return <ChromeReaderMode />;\n        case 'about':\n            return <Info />;\n        default:\n            return <Inbox />;\n    }\n}\n\nconst ListButton: ListButtonComponent = ({\n    id,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    active,\n}) => {\n    const classes = useStyles();\n\n    return (\n        <ListItem\n            className={`${classes.listItem} ${active ? 'active' : ''}`}\n            button\n            disableRipple\n            onClick={() => onClick(id)}\n            onMouseEnter={() => (onMouseEnter ? onMouseEnter(id) : undefined)}\n            onMouseLeave={() => (onMouseLeave ? onMouseLeave(id) : undefined)}\n        >\n            <ListItemIcon className={classes.icon}>{getIcon(id)}</ListItemIcon>\n            <ListItemText primary={text(id)} />\n            <div className=\"border\" />\n        </ListItem>\n    );\n};\n\nexport default ListButton;\n"]}