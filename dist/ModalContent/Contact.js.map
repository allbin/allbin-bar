{"version":3,"sources":["../src/ModalContent/Contact.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACH,MAAM,EACN,OAAO,EACP,UAAU,EACV,IAAI,EACJ,MAAM,EACN,IAAI,GACP,MAAM,mBAAmB,CAAC;AAE3B,OAAO,UAAU,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,IAAI,MAAM,SAAS,CAAC;AAM3B,MAAM,SAAS,GAAG,UAAU,EAAE,CAAC;AAE/B,MAAM,OAAO,GAAG,CAAC,EAAE,OAAO,EAAS,EAAE,EAAE;IACnC,MAAM,OAAO,GAAG,SAAS,EAAE,CAAC;IAE5B,OAAO,CACH,6BAAK,SAAS,EAAE,OAAO,CAAC,IAAI;QACxB,oBAAC,IAAI,IAAC,SAAS,EAAE,OAAO,CAAC,IAAI,GAAI;QACjC,oBAAC,MAAM,IAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAE,CAAC;YAC7D,oBAAC,OAAO,IAAC,OAAO,EAAC,OAAO,EAAC,SAAS,EAAE,OAAO,CAAC,OAAO;gBAC/C,oBAAC,UAAU,IACP,SAAS,EAAE,OAAO,CAAC,KAAK,EACxB,OAAO,EAAC,IAAI,EACZ,KAAK,EAAC,SAAS,EACf,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,IAE5B,IAAI,CAAC,SAAS,CAAC,CACP,CACP,CACL;QACT,6BAAK,SAAS,EAAE,OAAO,CAAC,IAAI;YACxB,oBAAC,IAAI,IAAC,SAAS;gBACX,oBAAC,IAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;oBACrB,6BAAK,SAAS,EAAE,GAAG,OAAO,CAAC,UAAU,YAAY;wBAC7C,oBAAC,UAAU,IAAC,OAAO,EAAC,IAAI,IACnB,IAAI,CAAC,QAAQ,CAAC,CACN;wBACb,oBAAC,UAAU,IAAC,OAAO,EAAC,OAAO,EAAC,SAAS,UAChC,IAAI,CAAC,cAAc,CAAC,CACZ;wBACb,oBAAC,IAAI,IACD,SAAS,EAAC,GAAG,EACb,IAAI,EAAC,0BAA0B,EAC/B,OAAO,EAAC,OAAO,IAEd,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAC7B;wBACP,6BAAK,SAAS,EAAE,OAAO,CAAC,UAAU;4BAC9B,oBAAC,MAAM,IACH,KAAK,EAAC,SAAS,EACf,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,OAAO,EACZ,SAAS,EAAE,OAAO,CAAC,MAAM,EACzB,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,IAEvB,IAAI,CAAC,OAAO,CAAC,CACT;4BACT,oBAAC,MAAM,IACH,KAAK,EAAC,SAAS,EACf,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,OAAO,EACZ,SAAS,EAAE,OAAO,CAAC,MAAM,EACzB,IAAI,EAAC,0BAA0B,IAE9B,IAAI,CAAC,UAAU,CAAC,CACZ,CACP,CACJ,CACH,CACJ,CACL,CACJ,CACT,CAAC;AACN,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","file":"Contact.js","sourcesContent":["import React from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Grid,\n    Button,\n    Link,\n} from '@material-ui/core';\n\nimport makeStyles from './styles';\nimport { Call } from '@material-ui/icons';\n\nimport text from '../text';\n\ninterface Props {\n    onClose: () => void;\n}\n\nconst useStyles = makeStyles();\n\nconst Contact = ({ onClose }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Call className={classes.icon} />\n            <AppBar className={classes.appBar} position=\"static\" elevation={0}>\n                <Toolbar variant=\"dense\" className={classes.toolBar}>\n                    <Typography\n                        className={classes.title}\n                        variant=\"h4\"\n                        color=\"inherit\"\n                        style={{ fontWeight: 'bold' }}\n                    >\n                        {text('contact')}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.body}>\n                <Grid container>\n                    <Grid item xs={12} sm={12}>\n                        <div className={`${classes.paper_body} --padding`}>\n                            <Typography variant=\"h6\">\n                                {text('allbin')}\n                            </Typography>\n                            <Typography variant=\"body2\" paragraph>\n                                {text('contact_text')}\n                            </Typography>\n                            <Link\n                                component=\"a\"\n                                href=\"https://www.allbinary.se\"\n                                variant=\"body2\"\n                            >\n                                {text('allbin_link_text', false)}\n                            </Link>\n                            <div className={classes.button_bar}>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    onClick={() => onClose()}\n                                >\n                                    {text('close')}\n                                </Button>\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"large\"\n                                    className={classes.button}\n                                    href=\"mailto:info@allbinary.se\"\n                                >\n                                    {text('email_us')}\n                                </Button>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n};\n\nexport default Contact;\n"]}