{"version":3,"sources":["../src/Container/Container.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAmB,MAAM,OAAO,CAAC;AA+BxC,UAAU,cAAc;IACpB,2DAA2D;IAC3D,SAAS,CAAC,EAAE,GAAG,CAAC;IAChB,6DAA6D;IAC7D,eAAe,CAAC,EAAE,MAAM,CAAC;IACzB;;;OAGG;IACH,sBAAsB,CAAC,EAAE,MAAM,CAAC;IAChC;;;OAGG;IACH,mBAAmB,CAAC,EAAE,MAAM,CAAC;IAC7B,WAAW,CAAC,EAAE,CAAC,aAAa,EAAE,MAAM,KAAK,IAAI,CAAC;IAC9C,OAAO,EAAE,MAAM,IAAI,CAAC;IACpB,QAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,KAAK,IAAI,CAAC;IACxC,0CAA0C;IAC1C,IAAI,EAAE,OAAO,CAAC;IACd,8DAA8D;IAC9D,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB,+DAA+D;IAC/D,gBAAgB,CAAC,EAAE,OAAO,CAAC;IAC3B,8DAA8D;IAC9D,gBAAgB,CAAC,EAAE,OAAO,CAAC;IAC3B,qEAAqE;IACrE,kBAAkB,CAAC,EAAE,OAAO,CAAC;IAC7B,+DAA+D;IAC/D,aAAa,CAAC,EAAE,OAAO,CAAC;IACxB,gEAAgE;IAChE,eAAe,CAAC,EAAE,OAAO,CAAC;IAC1B,+BAA+B;IAC/B,GAAG,EAAE,GAAG,CAAC;IACT,KAAK,EAAE,MAAM,CAAC;IACd,oEAAoE;IACpE,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC;CACxB;AAED,aAAK,2BAA2B,GAAG,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AA0D3E,QAAA,MAAM,kBAAkB,EAAE,2BAkMzB,CAAC;AAEF,eAAe,kBAAkB,CAAC","file":"Container/Container.d.ts","sourcesContent":["import React, { useState } from 'react';\nimport {\n    AppBar,\n    Card,\n    createStyles,\n    Drawer,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    makeStyles,\n    Modal,\n    Theme,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport text from '../text';\nimport ListButton from '../ListButton';\n\nimport {\n    About,\n    Changelog,\n    Contact,\n    Help,\n    //     SaveModalContent,\n    //     ShareModalContent,\n    //     ExportModalContent,\n} from '../ModalContent';\n\n\ninterface AllbinBarProps {\n    /** Enables changelog button and displays the changelog. */\n    changelog?: any;\n    /** Enables changelog button and displays current_version. */\n    current_version?: string;\n    /**\n     * URL navigated to when 'to dashboard'-button is clicked, or provided to onDashboard callback is provided.\n     * Defaults to 'https://dashboard.allbin.se'.\n     */\n    dashboard_redirect_url?: string;\n    /**\n     * URL sent to SSO.logout command or onLogout callback if provided.\n     * Defaults to 'https://login.allbin.se/'.\n     */\n    logout_redirect_url?: string;\n    onDashboard?: (dashboard_url: string) => void;\n    onClose: () => void;\n    onLogout?: (logout_url: string) => void;\n    /** Shows AllbinBar. Defaults to false. */\n    open: boolean;\n    /** Displays and enables 'about'-button. Defaults to false. */\n    show_about_btn?: boolean;\n    /** Displays and enables 'contact'-button. Defaults to true. */\n    show_contact_btn?: boolean;\n    /** Show what username was used to login. Defaults to true. */\n    show_credentials?: boolean;\n    /** Dispalys and enables a 'to dashboard'-button Defaults to true. */\n    show_dashboard_btn?: boolean;\n    /** Displays and enables a 'help'-button. Defaults to false. */\n    show_help_btn?: boolean;\n    /** Displays and enables a 'logout'-button. Defaults to true. */\n    show_logout_btn?: boolean;\n    /** Reference to window.sso. */\n    sso: any;\n    title: string;\n    /** Each string will be a separate paragraph in the 'about'-text. */\n    tool_info?: string[];\n}\n\ntype AllbinBarContainerComponent = React.FunctionComponent<AllbinBarProps>;\n\nconst width = '300px';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {},\n        drawer: {\n            width: width,\n            flexShrink: 0,\n            '& .MuiBackdrop-root': {\n                backgroundColor: 'rgba(9, 57, 128, 0.82)',\n            },\n            '& .MuiPaper-root': {\n                backgroundColor: '#fff',\n            },\n        },\n        appBar: { width: width },\n        title: { fontWeight: 'bold', color: '#3f51b5' },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: 20,\n        },\n        list: {\n            width: '100%',\n        },\n        fullList: {\n            width: 'auto',\n        },\n        secondaryLabel: {\n            color: '#413D49',\n            marginTop: theme.spacing(0.5),\n            opacity: 0.8,\n        },\n        modalContainer: {\n            backgroundColor: 'transparent',\n            marginTop: 60,\n            outline: 'none',\n        },\n        bottomList: {\n            borderRadius: '8px 8px 0 0',\n            backgroundColor: '#413D49',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            right: 0,\n            padding: theme.spacing(1, 2),\n            zIndex: 2,\n        },\n        credentials: {\n            color: 'white'\n        }\n    }),\n);\n\n\ntype ModalState = 'hidden' | 'changelog' | 'contact' | 'about' | 'help';\n\nconst AllbinBarContainer: AllbinBarContainerComponent = ({\n    changelog,\n    current_version,\n    dashboard_redirect_url,\n    logout_redirect_url,\n    onClose,\n    onDashboard,\n    onLogout,\n    open,\n    show_about_btn,\n    show_contact_btn,\n    show_credentials,\n    show_dashboard_btn,\n    show_help_btn,\n    show_logout_btn,\n    sso,\n    title,\n    tool_info,\n}) => {\n    let [modal_state, setModalState] = useState<ModalState>('hidden');\n\n    dashboard_redirect_url = dashboard_redirect_url || 'https://dashboard.allbin.se';\n    logout_redirect_url = logout_redirect_url || 'https://login.allbin.se';\n    show_about_btn = show_about_btn !== undefined ? show_about_btn : false;\n    show_contact_btn = show_contact_btn !== undefined ? show_contact_btn : true;\n    show_credentials = show_credentials !== undefined ? show_credentials : true;\n    show_dashboard_btn = show_dashboard_btn !== undefined ? show_dashboard_btn : true;\n    show_help_btn = show_help_btn !== undefined ? show_help_btn : false;\n    show_logout_btn = show_logout_btn !== undefined ? show_logout_btn : true;\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Drawer\n                open={open}\n                onClose={() => onClose()}\n                className={classes.drawer}\n            >\n                <AppBar\n                    position=\"static\"\n                    className={classes.appBar}\n                    elevation={0}\n                >\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            color=\"primary\"\n                            aria-label=\"Menu\"\n                            onClick={() => onClose()}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            className={classes.title}\n                            variant=\"h6\"\n                        >\n                            {title}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <div className={classes.list}>\n                    <List>\n                        {show_about_btn &&\n                            (\n                                <ListButton\n                                    id={'about'}\n                                    onClick={() => { setModalState(\"about\"); }}\n                                />\n                            )\n                        }\n                        {(changelog || current_version) &&\n                            (\n                                <ListButton\n                                    id={'changelog'}\n                                    onClick={() => { setModalState(\"changelog\"); }}\n                                />\n                            )\n                        }\n                        {show_contact_btn &&\n                            (\n                                <ListButton\n                                    id={'contact'}\n                                    onClick={() => { setModalState(\"contact\"); }}\n                                />\n                            )\n                        }\n                        {show_help_btn &&\n                            (\n                                <ListButton\n                                    id={'help'}\n                                    onClick={() => { setModalState(\"help\"); }}\n                                />\n                            )\n                        }\n                    </List>\n                    <br />\n                    <List className={classes.bottomList}>\n                        {show_credentials && sso && sso.isLoggedIn() &&\n                            (\n                                <ListItem className={classes.credentials}>\n                                    <div style={{ width: '100%' }}>\n                                        <Typography variant=\"overline\" align=\"right\" display=\"block\">\n                                            {text('logged_in_as')}\n                                        </Typography>\n                                        <Typography align=\"right\" display=\"block\" paragraph={true}>\n                                            {sso.getJWT().getClaim('username')}\n                                        </Typography>\n                                    </div>\n                                </ListItem>\n                            )\n                        }\n                        {show_dashboard_btn &&\n                            (\n                                <ListButton\n                                    id=\"to_dashboard\"\n                                    color=\"blue\"\n                                    onClick={() => onDashboard ? onDashboard(dashboard_redirect_url!) : window.location.href = dashboard_redirect_url!}\n                                />\n                            )\n                        }\n                        {show_logout_btn &&\n                            (\n                                <ListButton\n                                    id=\"logout\"\n                                    color=\"red\"\n                                    onClick={() => onLogout ? onLogout(logout_redirect_url!) : sso.logout(logout_redirect_url)}\n                                />\n                            )\n                        }\n                    </List>\n                </div>\n            </Drawer>\n            <Modal\n                open={modal_state !== 'hidden'}\n                onClose={() => {\n                    setModalState('hidden');\n                }}\n            >\n                <Grid container spacing={0} className={classes.modalContainer}>\n                    <Grid item sm={1} md={1} lg={2} />\n                    <Grid\n                        item\n                        sm={10}\n                        md={10}\n                        lg={8}\n                        style={{ backgroundColor: 'transparent' }}\n                    >\n                        <Card\n                            raised\n                            style={{\n                                backgroundColor: 'transparent',\n                                borderRadius: 32,\n                            }}\n                        >\n                            {modal_state === \"about\" &&\n                                (\n                                    <About\n                                        onClose={() => { setModalState('hidden'); }}\n                                        tool_title={title}\n                                        tool_info={tool_info}\n                                    />\n                                )\n                            }\n                            {modal_state === \"changelog\" &&\n                                (\n                                    <Changelog\n                                        current_version={current_version}\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                            {modal_state === \"contact\" &&\n                                (\n                                    <Contact\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                            {modal_state === \"help\" &&\n                                (\n                                    <Help\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item sm={1} md={1} lg={2} />\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AllbinBarContainer;\n"],"sourceRoot":"/source/"}