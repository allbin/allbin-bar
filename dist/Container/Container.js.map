{"version":3,"sources":["../src/Container/Container.tsx"],"names":[],"mappings":"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","file":"Container/Container.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n    AppBar,\n    Card,\n    createStyles,\n    Drawer,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    makeStyles,\n    Modal,\n    Theme,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport text from '../text';\nimport ListButton from '../ListButton';\n\nimport {\n    About,\n    Changelog,\n    Contact,\n    Help,\n    //     SaveModalContent,\n    //     ShareModalContent,\n    //     ExportModalContent,\n} from '../ModalContent';\n\n\ninterface AllbinBarProps {\n    /** Enables changelog button and displays the changelog. */\n    changelog?: any;\n    /** Enables changelog button and displays current_version. */\n    current_version?: string;\n    /**\n     * URL navigated to when 'to dashboard'-button is clicked, or provided to onDashboard callback is provided.\n     * Defaults to 'https://dashboard.allbin.se'.\n     */\n    dashboard_redirect_url?: string;\n    /**\n     * URL sent to SSO.logout command or onLogout callback if provided.\n     * Defaults to 'https://login.allbin.se/'.\n     */\n    logout_redirect_url?: string;\n    onDashboard?: (dashboard_url: string) => void;\n    onClose: () => void;\n    onLogout?: (logout_url: string) => void;\n    /** Shows AllbinBar. Defaults to false. */\n    open: boolean;\n    /** Displays and enables 'about'-button. Defaults to false. */\n    show_about_btn?: boolean;\n    /** Displays and enables 'contact'-button. Defaults to true. */\n    show_contact_btn?: boolean;\n    /** Show what username was used to login. Defaults to true. */\n    show_credentials?: boolean;\n    /** Dispalys and enables a 'to dashboard'-button Defaults to true. */\n    show_dashboard_btn?: boolean;\n    /** Displays and enables a 'help'-button. Defaults to false. */\n    show_help_btn?: boolean;\n    /** Displays and enables a 'logout'-button. Defaults to true. */\n    show_logout_btn?: boolean;\n    /** Reference to window.sso. */\n    sso: any;\n    title: string;\n    /** Each string will be a separate paragraph in the 'about'-text. */\n    tool_info?: string[];\n}\n\ntype AllbinBarContainerComponent = React.FunctionComponent<AllbinBarProps>;\n\nconst width = '300px';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {},\n        drawer: {\n            width: width,\n            flexShrink: 0,\n            '& .MuiBackdrop-root': {\n                backgroundColor: 'rgba(9, 57, 128, 0.82)',\n            },\n            '& .MuiPaper-root': {\n                backgroundColor: '#fff',\n            },\n        },\n        appBar: { width: width },\n        title: { fontWeight: 'bold', color: '#3f51b5' },\n        menuButton: {\n            marginLeft: -12,\n            marginRight: 20,\n        },\n        list: {\n            width: '100%',\n        },\n        fullList: {\n            width: 'auto',\n        },\n        secondaryLabel: {\n            color: '#413D49',\n            marginTop: theme.spacing(0.5),\n            opacity: 0.8,\n        },\n        modalContainer: {\n            backgroundColor: 'transparent',\n            marginTop: 60,\n            outline: 'none',\n        },\n        bottomList: {\n            borderRadius: '8px 8px 0 0',\n            backgroundColor: '#413D49',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            right: 0,\n            padding: theme.spacing(1, 2),\n            zIndex: 2,\n        },\n        credentials: {\n            color: 'white'\n        }\n    }),\n);\n\n\ntype ModalState = 'hidden' | 'changelog' | 'contact' | 'about' | 'help';\n\nconst AllbinBarContainer: AllbinBarContainerComponent = ({\n    changelog,\n    current_version,\n    dashboard_redirect_url,\n    logout_redirect_url,\n    onClose,\n    onDashboard,\n    onLogout,\n    open,\n    show_about_btn,\n    show_contact_btn,\n    show_credentials,\n    show_dashboard_btn,\n    show_help_btn,\n    show_logout_btn,\n    sso,\n    title,\n    tool_info,\n}) => {\n    let [modal_state, setModalState] = useState<ModalState>('hidden');\n\n    dashboard_redirect_url = dashboard_redirect_url || 'https://dashboard.allbin.se';\n    logout_redirect_url = logout_redirect_url || 'https://login.allbin.se';\n    show_about_btn = show_about_btn !== undefined ? show_about_btn : false;\n    show_contact_btn = show_contact_btn !== undefined ? show_contact_btn : true;\n    show_credentials = show_credentials !== undefined ? show_credentials : true;\n    show_dashboard_btn = show_dashboard_btn !== undefined ? show_dashboard_btn : true;\n    show_help_btn = show_help_btn !== undefined ? show_help_btn : false;\n    show_logout_btn = show_logout_btn !== undefined ? show_logout_btn : true;\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Drawer\n                open={open}\n                onClose={() => onClose()}\n                className={classes.drawer}\n            >\n                <AppBar\n                    position=\"static\"\n                    className={classes.appBar}\n                    elevation={0}\n                >\n                    <Toolbar>\n                        <IconButton\n                            className={classes.menuButton}\n                            color=\"primary\"\n                            aria-label=\"Menu\"\n                            onClick={() => onClose()}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            className={classes.title}\n                            variant=\"h6\"\n                        >\n                            {title}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <div className={classes.list}>\n                    <List>\n                        {show_about_btn &&\n                            (\n                                <ListButton\n                                    id={'about'}\n                                    onClick={() => { setModalState(\"about\"); }}\n                                />\n                            )\n                        }\n                        {(changelog || current_version) &&\n                            (\n                                <ListButton\n                                    id={'changelog'}\n                                    onClick={() => { setModalState(\"changelog\"); }}\n                                />\n                            )\n                        }\n                        {show_contact_btn &&\n                            (\n                                <ListButton\n                                    id={'contact'}\n                                    onClick={() => { setModalState(\"contact\"); }}\n                                />\n                            )\n                        }\n                        {show_help_btn &&\n                            (\n                                <ListButton\n                                    id={'help'}\n                                    onClick={() => { setModalState(\"help\"); }}\n                                />\n                            )\n                        }\n                    </List>\n                    <br />\n                    <List className={classes.bottomList}>\n                        {show_credentials && sso && sso.isLoggedIn() &&\n                            (\n                                <ListItem className={classes.credentials}>\n                                    <div style={{ width: '100%' }}>\n                                        <Typography variant=\"overline\" align=\"right\" display=\"block\">\n                                            {text('logged_in_as')}\n                                        </Typography>\n                                        <Typography align=\"right\" display=\"block\" paragraph={true}>\n                                            {sso.getJWT().getClaim('username')}\n                                        </Typography>\n                                    </div>\n                                </ListItem>\n                            )\n                        }\n                        {show_dashboard_btn &&\n                            (\n                                <ListButton\n                                    id=\"to_dashboard\"\n                                    color=\"blue\"\n                                    onClick={() => onDashboard ? onDashboard(dashboard_redirect_url!) : window.location.href = dashboard_redirect_url!}\n                                />\n                            )\n                        }\n                        {show_logout_btn &&\n                            (\n                                <ListButton\n                                    id=\"logout\"\n                                    color=\"red\"\n                                    onClick={() => onLogout ? onLogout(logout_redirect_url!) : sso.logout(logout_redirect_url)}\n                                />\n                            )\n                        }\n                    </List>\n                </div>\n            </Drawer>\n            <Modal\n                open={modal_state !== 'hidden'}\n                onClose={() => {\n                    setModalState('hidden');\n                }}\n            >\n                <Grid container spacing={0} className={classes.modalContainer}>\n                    <Grid item sm={1} md={1} lg={2} />\n                    <Grid\n                        item\n                        sm={10}\n                        md={10}\n                        lg={8}\n                        style={{ backgroundColor: 'transparent' }}\n                    >\n                        <Card\n                            raised\n                            style={{\n                                backgroundColor: 'transparent',\n                                borderRadius: 32,\n                            }}\n                        >\n                            {modal_state === \"about\" &&\n                                (\n                                    <About\n                                        onClose={() => { setModalState('hidden'); }}\n                                        tool_title={title}\n                                        tool_info={tool_info}\n                                    />\n                                )\n                            }\n                            {modal_state === \"changelog\" &&\n                                (\n                                    <Changelog\n                                        current_version={current_version}\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                            {modal_state === \"contact\" &&\n                                (\n                                    <Contact\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                            {modal_state === \"help\" &&\n                                (\n                                    <Help\n                                        onClose={() => { setModalState('hidden'); }}\n                                    />\n                                )\n                            }\n                        </Card>\n                    </Grid>\n                    <Grid item sm={1} md={1} lg={2} />\n                </Grid>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AllbinBarContainer;\n"],"sourceRoot":"/source/"}