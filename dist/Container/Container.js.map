{"version":3,"sources":["../src/Container/Container.tsx"],"names":[],"mappings":"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","file":"Container.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n    AppBar,\n    Card,\n    createStyles,\n    Drawer,\n    Grid,\n    Button,\n    List,\n    ListItem,\n    Fade,\n    makeStyles,\n    Modal,\n    Theme,\n    Toolbar,\n    Typography,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport text from '../text';\nimport ListButton from '../ListButton';\n\nimport {\n    About,\n    Changelog,\n    Contact,\n    Help,\n    //     SaveModalContent,\n    //     ShareModalContent,\n    //     ExportModalContent,\n} from '../ModalContent';\n\nimport girlInModalImage from '../img/girl_modal.png';\nimport { LangId } from 'output-helpers';\n\ninterface AllbinBarProps {\n    /** Enables changelog button and displays the changelog. */\n    changelog?: any;\n    /** Enables changelog button and displays current_version. */\n    current_version?: string;\n    /**\n     * URL navigated to when 'to dashboard'-button is clicked, or provided to onDashboard callback is provided.\n     * Defaults to 'https://dashboard.allbin.se'.\n     */\n    dashboard_redirect_url?: string;\n    /**\n     * Specify which language button should be shown as highlighted.\n     * Must specify an onLanguage callback for this property to have any effect.\n     */\n    language?: LangId;\n    /**\n     * URL sent to SSO.logout command or onLogout callback if provided.\n     * Defaults to 'https://login.allbin.se/'.\n     */\n    logout_redirect_url?: string;\n    onClose: () => void;\n    onDashboard?: (dashboard_url: string) => void;\n    /**\n     * This callback is called when the user clicks a language selection button.\n     * Must specify a _language_ property for this callback to have any effect.\n     */\n    onLanguage?: (language: LangId) => void;\n    onLogout?: (logout_url: string) => void;\n    /** Shows AllbinBar. Defaults to false. */\n    open: boolean;\n    /** Displays and enables 'about'-button. Defaults to false. */\n    show_about_btn?: boolean;\n    /** Displays and enables 'contact'-button. Defaults to true. */\n    show_contact_btn?: boolean;\n    /** Show what username was used to login. Defaults to true. */\n    show_credentials?: boolean;\n    /** Dispalys and enables a 'to dashboard'-button Defaults to true. */\n    show_dashboard_btn?: boolean;\n    /** Displays and enables a 'help'-button. Defaults to false. */\n    show_help_btn?: boolean;\n    /** Displays and enables a 'logout'-button. Defaults to true. */\n    show_logout_btn?: boolean;\n    /** Reference to window.sso. */\n    sso?: any;\n    title: string;\n    /** Each string will be a separate paragraph in the 'about'-text. */\n    tool_info?: string[];\n}\n\ntype AllbinBarContainerComponent = React.FunctionComponent<AllbinBarProps>;\n\nconst width = {\n    small: 460,\n    large: 580,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {},\n        drawer: {\n            width: width.large,\n            flexShrink: 0,\n            '& .MuiBackdrop-root': {},\n            '& .MuiPaper-root': {\n                background:\n                    'linear-gradient(269.45deg, #2E71E5 0.62%, #265FC0 98.88%)',\n            },\n            [theme.breakpoints.down('lg')]: {\n                width: width.small,\n            },\n        },\n        appBar: {\n            width: width.large,\n            padding: theme.spacing(1, 5, 0, 4),\n            [theme.breakpoints.down('lg')]: {\n                width: width.small,\n            },\n        },\n        toolBar: { padding: 0 },\n        title: { fontWeight: 'bold', color: '#fff', fontSize: 42 },\n        menuButton: {\n            position: 'absolute',\n            right: -20,\n            color: '#fff',\n            opacity: 0.6,\n            '&:HOVER': {\n                opacity: 1,\n            },\n            '& svg': {\n                fontSize: 52,\n            },\n        },\n        list: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-end',\n            marginTop: theme.spacing(14),\n            [theme.breakpoints.down('lg')]: {\n                marginTop: theme.spacing(6),\n            },\n        },\n        userActions: {\n            alignItems: 'center',\n            display: 'flex',\n        },\n        userAction: {\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            '&:HOVER': {\n                opacity: 0.8,\n            },\n        },\n        languageBtn: {\n            color: '#fff',\n            fontSize: '12px',\n            margin: theme.spacing(1),\n            cursor: 'pointer',\n            '&:HOVER': {\n                opacity: 0.6,\n            },\n        },\n        languageBtnHighlight: {\n            cursor: 'default',\n            fontWeight: 'bold',\n            '&:HOVER': {\n                opacity: 1,\n            },\n        },\n        dashboardBtn: {\n            backgroundColor: '#2d6bdb',\n            borderRadius: 3,\n            padding: '2px 12px',\n        },\n        fullList: {\n            width: 'auto',\n        },\n        secondaryLabel: {\n            color: '#413D49',\n            marginTop: theme.spacing(0.5),\n            opacity: 0.8,\n        },\n        modal: {\n            pointerEvents: 'none',\n        },\n        modalContainer: {\n            backgroundImage: 'url(' + girlInModalImage + ')',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '44px 94%',\n            position: 'relative',\n            backgroundColor: '#fff',\n            pointerEvents: 'all',\n            paddingTop: 100,\n            width: 'calc(100% - ' + width.large + 'px)',\n            margin: '0 0 0 auto',\n            overflow: 'auto',\n            height: '100%',\n            outline: 'none',\n            [theme.breakpoints.down('lg')]: {\n                paddingTop: 10,\n                width: 'calc(100% - ' + width.small + 'px)',\n            },\n            [theme.breakpoints.down('md')]: {\n                backgroundImage: 'none',\n            },\n        },\n        modalCard: {\n            backgroundColor: 'transparent',\n            boxShadow: 'none',\n        },\n        bottomList: {\n            backgroundColor: '#182B4F',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            right: 0,\n            padding: theme.spacing(3, 4),\n            zIndex: 2,\n            [theme.breakpoints.down('lg')]: {\n                padding: theme.spacing(2, 3),\n            },\n        },\n        credentials: {\n            color: 'white',\n        },\n        backdropRoot: {\n            pointerEvents: 'none',\n        },\n        signedInAs: {\n            [theme.breakpoints.down('lg')]: {\n                fontSize: 12,\n                lineHeight: '24px',\n            },\n        },\n        username: {\n            [theme.breakpoints.down('lg')]: {\n                fontSize: 20,\n            },\n        },\n    }),\n);\n\ntype ModalState = 'hidden' | 'changelog' | 'contact' | 'about' | 'help';\n\nconst AllbinBarContainer: AllbinBarContainerComponent = ({\n    changelog,\n    current_version,\n    dashboard_redirect_url,\n    language,\n    logout_redirect_url,\n    onClose,\n    onDashboard,\n    onLanguage,\n    onLogout,\n    open,\n    show_about_btn,\n    show_contact_btn,\n    show_credentials,\n    show_dashboard_btn,\n    show_help_btn,\n    show_logout_btn,\n    sso,\n    title,\n    tool_info,\n}) => {\n    let [modal_state, setModalState] = useState<ModalState>('hidden');\n\n    dashboard_redirect_url =\n        dashboard_redirect_url || 'https://dashboard.allbin.se';\n    logout_redirect_url = logout_redirect_url || 'https://login.allbin.se';\n    show_about_btn = show_about_btn !== undefined ? show_about_btn : false;\n    show_contact_btn = show_contact_btn !== undefined ? show_contact_btn : true;\n    show_credentials = show_credentials !== undefined ? show_credentials : true;\n    show_dashboard_btn =\n        show_dashboard_btn !== undefined ? show_dashboard_btn : true;\n    show_help_btn = show_help_btn !== undefined ? show_help_btn : false;\n    show_logout_btn = show_logout_btn !== undefined ? show_logout_btn : true;\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Drawer\n                open={open}\n                onClose={() => {\n                    setModalState('hidden');\n                    onClose();\n                }}\n                className={classes.drawer}\n            >\n                <AppBar\n                    position=\"static\"\n                    className={classes.appBar}\n                    elevation={0}\n                >\n                    <Toolbar className={classes.toolBar}>\n                        <Typography className={classes.title} variant=\"h6\">\n                            {title}\n                        </Typography>\n                        <Button\n                            className={classes.menuButton}\n                            aria-label=\"Close\"\n                            onClick={() => {\n                                setModalState('hidden');\n                                onClose();\n                            }}\n                        >\n                            <CloseIcon />\n                        </Button>\n                    </Toolbar>\n                </AppBar>\n                <Grid container direction=\"row\">\n                    {onLanguage && language && (\n                        <>\n                            <Grid item xs={2}>\n                                <Typography\n                                    gutterBottom\n                                    className={\n                                        language === 'en-US'\n                                            ? classes.languageBtn +\n                                              ' ' +\n                                              classes.languageBtnHighlight\n                                            : classes.languageBtn\n                                    }\n                                    align=\"right\"\n                                    onClick={() =>\n                                        language !== 'en-US' &&\n                                        onLanguage('en-US')\n                                    }\n                                >\n                                    English\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <Typography\n                                    gutterBottom\n                                    className={\n                                        language === 'sv-SE'\n                                            ? classes.languageBtn +\n                                              ' ' +\n                                              classes.languageBtnHighlight\n                                            : classes.languageBtn\n                                    }\n                                    align=\"left\"\n                                    onClick={() =>\n                                        language !== 'sv-SE' &&\n                                        onLanguage('sv-SE')\n                                    }\n                                >\n                                    Svenska\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={8} />\n                        </>\n                    )}\n                </Grid>\n                <List className={classes.list}>\n                    {show_about_btn && (\n                        <ListButton\n                            active={modal_state === 'about'}\n                            id={'about'}\n                            onClick={() => {\n                                setModalState('about');\n                            }}\n                        />\n                    )}\n                    {(changelog || current_version) && (\n                        <ListButton\n                            active={modal_state === 'changelog'}\n                            id={'changelog'}\n                            onClick={() => {\n                                setModalState('changelog');\n                            }}\n                        />\n                    )}\n                    {show_contact_btn && (\n                        <ListButton\n                            active={modal_state === 'contact'}\n                            id={'contact'}\n                            onClick={() => {\n                                setModalState('contact');\n                            }}\n                        />\n                    )}\n                    {show_help_btn && (\n                        <ListButton\n                            active={modal_state === 'help'}\n                            id={'help'}\n                            onClick={() => {\n                                setModalState('help');\n                            }}\n                        />\n                    )}\n                </List>\n\n                <div className={classes.bottomList}>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            {show_credentials && sso && sso.isLoggedIn() && (\n                                <ListItem className={classes.credentials}>\n                                    <div style={{ width: '100%' }}>\n                                        <Typography\n                                            variant=\"overline\"\n                                            display=\"block\"\n                                            className={classes.signedInAs}\n                                        >\n                                            {text('logged_in_as')}\n                                        </Typography>\n                                        <Typography\n                                            variant=\"h5\"\n                                            display=\"block\"\n                                            className={classes.username}\n                                        >\n                                            {sso.getJWT().getClaim('username')}\n                                        </Typography>\n                                    </div>\n                                </ListItem>\n                            )}\n                        </Grid>\n                        <Grid item xs={6} className={classes.userActions}>\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"flex-end\"\n                                alignItems=\"flex-end\"\n                            >\n                                {show_dashboard_btn && (\n                                    <Grid item xs={12}>\n                                        <Typography\n                                            gutterBottom\n                                            className={`${classes.userAction} ${classes.dashboardBtn}`}\n                                            id=\"to_dashboard\"\n                                            align=\"right\"\n                                            onClick={() =>\n                                                onDashboard\n                                                    ? onDashboard(\n                                                          dashboard_redirect_url!,\n                                                      )\n                                                    : (window.location.href = dashboard_redirect_url!)\n                                            }\n                                        >\n                                            {text('to_dashboard')}\n                                        </Typography>\n                                    </Grid>\n                                )}\n                                {show_logout_btn && (\n                                    <Grid item xs={12}>\n                                        <Typography\n                                            className={classes.userAction}\n                                            id=\"logout\"\n                                            align=\"right\"\n                                            onClick={() =>\n                                                onLogout\n                                                    ? onLogout(\n                                                          logout_redirect_url!,\n                                                      )\n                                                    : sso.logout(\n                                                          logout_redirect_url,\n                                                      )\n                                            }\n                                        >\n                                            {text('logout')}\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Drawer>\n            <Modal\n                closeAfterTransition\n                className={classes.modal}\n                BackdropProps={{ classes: { root: classes.backdropRoot } }}\n                hideBackdrop={true}\n                open={modal_state !== 'hidden'}\n                onClose={() => {\n                    setModalState('hidden');\n                }}\n            >\n                <Fade in={modal_state !== 'hidden'}>\n                    <Grid\n                        container\n                        spacing={0}\n                        className={classes.modalContainer}\n                    >\n                        <Grid item sm={1} md={1} lg={2} />\n                        <Grid\n                            item\n                            sm={10}\n                            md={10}\n                            lg={8}\n                            style={{ backgroundColor: 'transparent' }}\n                        >\n                            <Card className={classes.modalCard}>\n                                {modal_state === 'about' && (\n                                    <About\n                                        onClose={() => {\n                                            setModalState('hidden');\n                                        }}\n                                        tool_title={title}\n                                        tool_info={tool_info}\n                                    />\n                                )}\n                                {modal_state === 'changelog' && (\n                                    <Changelog\n                                        current_version={current_version}\n                                        onClose={() => {\n                                            setModalState('hidden');\n                                        }}\n                                    />\n                                )}\n                                {modal_state === 'contact' && (\n                                    <Contact\n                                        onClose={() => {\n                                            setModalState('hidden');\n                                        }}\n                                    />\n                                )}\n                                {modal_state === 'help' && (\n                                    <Help\n                                        onClose={() => {\n                                            setModalState('hidden');\n                                        }}\n                                    />\n                                )}\n                            </Card>\n                        </Grid>\n                        <Grid item sm={1} md={1} lg={2} />\n                    </Grid>\n                </Fade>\n            </Modal>\n        </div>\n    );\n};\n\nexport default AllbinBarContainer;\n"]}